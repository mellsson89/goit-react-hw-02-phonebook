{"version":3,"sources":["components/ContactList/styles/contactList.module.scss","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/styles/contactForm.module.scss","components/Filter/styles/filter.module.scss"],"names":["module","exports","Filter","value","onChange","className","style","filterLabel","type","name","filterInput","ContactForm","state","number","handleChange","e","currentTarget","setState","handleSubmit","preventDefault","contact","id","uuidv4","props","onSubmit","resetForm","this","form","formLabel","pattern","title","required","formInput","Component","ContactList","contacts","onDelete","map","contactList_item","onClick","App","filter","handleFilter","addContact","cloneName","find","alert","prevState","deleteContact","normalizeFilter","toLowerCase","visibleFilter","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b258945.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList_item\":\"contactList_contactList_item__2clu3\"};","import React from \"react\";\nimport style from './styles/filter.module.scss';\nimport PropTypes from 'prop-types';\n\nconst Filter =({value,onChange}) => (\n\n    <label className={style.filterLabel}>\n        Find contacts by name\n        <input type='text' name='filter' value={value} onChange={onChange} className={style.filterInput}/>\n    </label>\n)\n\nFilter.propTypes={\n    value:PropTypes.string\n}\n\nexport default Filter;","import React,{Component} from \"react\";\nimport {v4 as uuidv4} from \"uuid\";\nimport style from './styles/contactForm.module.scss';\n\nclass ContactForm extends Component {\n\n    state= {\n        name: '',\n        number:''\n    }\n\n    handleChange = (e) => {\n        const {name,value}=e.currentTarget;\n\n        this.setState({\n            [name]:value\n        })\n    }\n\n    handleSubmit =(e) => {\n        e.preventDefault();\n\n        const contact = {\n            id:uuidv4(),\n            name:this.state.name,\n            number: this.state.number\n        }\n\n     this.props.onSubmit(contact)\n        this.resetForm()\n\n    }\n\n    resetForm =() => {\n        this.setState({\n            name:'',\n            number:''\n        })\n    }\n\nrender() {\n\n    const {name,number}=this.state;\n\n    return (\n        <form onSubmit={this.handleSubmit} className={style.form}>\n            <label className={style.formLabel}>\n                Name\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={this.handleChange}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    className={style.formInput}\n                />\n            </label>\n            <label className={style.formLabel}>\n                Number\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    onChange={this.handleChange}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    className={style.formInput}\n                />\n            </label>\n            <button type='submit'>Add contact</button>\n        </form>\n\n    )\n}\n}\nexport default ContactForm;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport style from './styles/contactList.module.scss';\n\n\nconst ContactList = ({contacts,onDelete}) => {\n    return (\n        <ul>\n            {contacts.map(({id,name,number})=> (\n\n                <li key={id} className={style.contactList_item}>{name}: {number} <button onClick={() => onDelete(id)}>Delete</button></li>\n\n            ))}\n        </ul>\n    )\n}\n\nContactList.propTypes={\n    contacts:PropTypes.arrayOf(PropTypes.shape({\n        id:PropTypes.string.isRequired,\n        name:PropTypes.string.isRequired,\n        number:PropTypes.string.isRequired\n    })).isRequired\n}\n\n\nexport default ContactList;","import React,{Component} from \"react\";\nimport Filter from \"./components/Filter\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\n\n\nclass App extends Component {\n\n\n    state = {\n        contacts: [ {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n            {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n            {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n            {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},],\n        filter: '',\n    }\n\n    handleFilter =(e) => {\n        this.setState({\n            filter:e.currentTarget.value\n        })\n    }\n\n    addContact = (contact) => {\n        const cloneName=this.state.contacts.find(({name}) => name === contact.name);\n        if(cloneName) {\n            const {name} =cloneName;\n            alert(`${name} is already in contacts`);\n            return;\n        }\n\n        this.setState(prevState => ({\n           contacts:[contact,...prevState.contacts]\n         }))\n    }\n\n    deleteContact =(id) => {\n        this.setState(prevState => ({\n            contacts:prevState.contacts.filter(contact => contact.id !== id)\n        }))\n\n    }\n\n\n    render() {\n        const {filter} =this.state;\n        const normalizeFilter=filter.toLowerCase();\n        const visibleFilter = this.state.contacts.filter(contact => contact.name.toLowerCase().includes(normalizeFilter))\n        return (\n            <div>\n                <h1>Phonebook</h1>\n                <ContactForm onSubmit ={this.addContact}/>\n                <h2>Contacts</h2>\n                <Filter value={filter} onChange={this.handleFilter}/>\n                <ContactList contacts={visibleFilter} onDelete={this.deleteContact}/>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__Xf3UP\",\"formInput\":\"contactForm_formInput__1NWn0\",\"formLabel\":\"contactForm_formLabel__2YvUF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"filter_filterInput__C1Cdi\",\"filterLabel\":\"filter_filterLabel__7T-pT\"};"],"sourceRoot":""}